{"type":"video_comment","id":15564,"parentType":"video","parentId":1471,"uid":18160,"contents":"<center>v2ray在wss協議下的代碼講解</center><br>\n<br>\n開始講wss的代碼了。<br>\n翻開課本v2ray-core\\transport\\internet\\websocket\\dialer.go<br>\n<br>\n從 <br>\n<pre>func Dial</pre><br>\n這個函數讀起。因爲外層調用必然是 internet.Dial這樣的調用方式進來。<br>\n<br>\n注意到這行代碼<br>\n<br>\n<pre>conn, err := dialWebsocket(ctx, dest, streamSettings)<br>\n</pre><br>\n我們跟進去，注意以下代碼<br>\n<br>\n<pre>dialer.TLSClientConfig = config.GetTLSConfig(tls.WithDestination(dest))<br>\nconn, resp, err := dialer.Dial(uri, wsSettings.GetRequestHeader())<br>\nreturn internet.DialSystem(ctx, dest, streamSettings.SocketSettings)<br>\n</pre><br>\n一行行解釋 翻開課本 v2ray-core\\transport\\internet\\tls\\config.go<br>\n<br>\n看函數 <br>\n<pre>GetTLSConfig</pre><br>\n我們重點解釋下<br>\n<br>\nconfig := &amp;tls.Config 保存了重要的配置信息，我們講講各個配置是什麽<br>\nconfig.CipherSuites 保存的加密套件，我個人推薦，把出現RSA，chacha，cbc等字樣的套件刪除！<br>\nconfig.InsecureSkipVerify 表示是否校驗證書，必須校驗啊！不校驗就被中間人攻擊了！像這次GitHub攻擊事件<br>\nconfig.Certificates 保存了各個證書。默認是系統自帶的，可以禁用。通過<br>\n<pre>config.GetCertificate = getGetCertificateFunc</pre><br>\n函數設置自己的自定義證書。我個人推薦，禁用系統的，只用自己的證書。<br>\n<br>\n其他的不重要<br>\n<br>\n<br>\n<br>\n<pre>conn, resp, err := dialer.Dial(uri, wsSettings.GetRequestHeader())<br>\nreturn internet.DialSystem(ctx, dest, streamSettings.SocketSettings)<br>\n</pre><br>\n第一行代碼表示調用了開源的<br>\n<pre>github.com/gorilla/websocket</pre><br>\n庫文件，不在此解讀了，你只要知道，通過這個開源庫，去建立了wss連接就好了，v2ray沒有自己實現wss，只是調用了第三方庫。<br>\n<br>\n第二行代碼，表示去建立了一個tcp連接，無它~<br>\n希望我的講解，可以幫助大家少走很多彎路，看代碼知道哪些是v2ray實現的，哪些是第三方庫<br>\n遇到問題，需要解決的時候，有一個思路，知道去看什麽代碼文件！<br>\n比如爲什麽不像SS一樣需要自己指定加密算法呢？因爲這個是TLS自己協商出來的，而不是我們指定的，我們可以通過刪減剛才的config.CipherSuites來指定加密算法<br>\n以及被中間人攻擊怎麽辦？我們可以通過config.Certificates 來設置自己的根證書解決<br>\n爲什麽看不到AEAD加密算法實現呢？因爲在<br>\n<pre>github.com/gorilla/websocket</pre><br>\n庫文件實現的數據AEAD加密<br>\n<br>\n等等問題，可以通過閲讀代碼自己回答。有需要，可以自己提issue。但是我都是自己改代碼，完成自我功能需求的客制化~<br>\n<br>\n有什麽v2ray的問題，可以給我留言。或者在v2ray的GitHub上提issue。","date":"2020-04-11","agreeCount":1,"discussionCount":0}