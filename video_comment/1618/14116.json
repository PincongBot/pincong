{"type":"video_comment","id":14116,"parentType":"video","parentId":1618,"uid":20551,"contents":"最后的结果是，客户端与葱1，葱2，葱3建立circuit，并且收到三把公钥PK1，PK2，PK3。每个中继节点都由客户端自主选择，因此恶意节点不会影响链路的构建。在构建链路时，全过程中只有葱1知道客户端的IP，并且每个节点都只知道自己的前序和后继节点，无法判断请求是来自客户端还是中继，因此客户端不会暴露身份。<br>\n<br>\n遗留的问题是：建立链路的请求要通过中继节点完成，然而中继节点不是完全可信。如何保证中继节点确实按照客户端的指令建立了连接，而不是把流量导向蜜罐？或者如何防止中继节点进行中间人攻击？<br>\n<br>\n方法是每个洋葱节点持有两把密钥：一把长期持有的身份密钥，和一把短期使用的会话密钥（就是前面建立TLS会话用到的密钥）。身份密钥用来给TLS证书签名，同时上传一份公钥到目录服务器。客户端与目录服务器连接后，检查节点列表中的公钥与洋葱节点传来的公钥是否匹配即可。<br>\n<br>\nRef:<br>\n[1] <a href=\"https://svn-archive.torproject.org/svn/projects/design-paper/tor-design.pdf\" rel=\"nofollow noreferrer noopener\" target=\"_blank\">https://svn-archive.torproject.org/svn/projects/design-paper/tor-design.pdf</a><br>\n[2] <a href=\"https://security.stackexchange.com/questions/215155/how-does-tor-protect-against-mitm-attacks-between-the-client-and-relay-nodes\" rel=\"nofollow noreferrer noopener\" target=\"_blank\">https://security.stackexchange.com/questions/215155/how-does-tor-protect-against-mitm-attacks-between-the-client-and-relay-nodes</a><br>\n[3] <a href=\"https://robertheaton.com/2019/04/06/how-does-tor-work/\" rel=\"nofollow noreferrer noopener\" target=\"_blank\">https://robertheaton.com/2019/04/06/how-does-tor-work/</a>","date":"2020-03-28","agreeCount":3,"discussionCount":0}