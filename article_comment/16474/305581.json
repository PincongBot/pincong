{"type":"article_comment","id":305581,"parentType":"article","parentId":16474,"uid":18160,"contents":"你可以貼出自己的<b>RSA公鑰</b>在這裏<br>\n<br>\n以後，別人質疑你的時候，他可以用你的公鑰加密<b>一段文字</b>，發給你<br>\n你用<b>私鑰解開</b>，貼出來内容，如果内容就是他加密前的文字，自然你就是你了<br>\n<br>\n爲了防止有人篡改了你的公鑰，所以，他們現在用/web.archive.org存檔了這個網頁<br>\n<br>\n關於如何RSA加解密，可以看代碼<br>\nboringssl\\crypto\\evp\\p_rsa.c<br>\n的pkey_rsa_encrypt和pkey_rsa_decrypt兩個函數<br>\n<br>\n<br>\nopenssl工具的简单使用：<br>\n<b>生成一个密钥：</b><br>\nopenssl genrsa -out test.key 3072<br>\n这里-out指定生成文件的。需要注意的是这个文件包含了<b>公钥和密钥两部分</b>，也就是说这个文件即可用来加密也可以用来解密。后面的3072是生成密钥的长度。<br>\n<b>openssl可以将这个文件中的公钥提取出来：</b><br>\nopenssl rsa -in test.key -pubout -out test_pub.key<br>\n-in指定输入文件，-out指定提取生成公钥的文件名。至此，我们手上就有了一个公钥，一个私钥（包含公钥）。<br>\n<br>\n我在目录中创建一个plain的文本文件，然后利用此前<b>生成的公钥加密文件</b>：<br>\nopenssl rsautl -encrypt -in plain -inkey test_pub.key -pubin -out crpyto.en <br>\n-in指定要加密的文件，-inkey指定密钥，-pubin表明是用纯公钥文件加密，-out为加密后的文件。<br>\n<b>解密文件：</b><br>\nopenssl rsautl -decrypt -in crypto.en -inkey test.key -out plain.de","date":"2020-03-19","agreeCount":3,"discussionCount":0}