{"type":"article_comment","id":319593,"parentType":"article","parentId":16884,"uid":21337,"contents":"<a href=\"https://pincong.rocks/article/item_id-319535#answer_list_319535\"><blockquote>这一步的逻辑跳跃有点大。。。为什么这个实验意味着墙可以检测出用户的流量？ </blockquote></a><br>\n那就以这个教程 https://pincong.rocks/article/15493 的方法，再配合尽量简单的说法来讲解<br>\n<br>\n在这个教程中，翻墙流量是伪装成https流量的（https流量是一种经过了加密的数据流），外界只知道有这个网站的存在，墙也只知道有人访问了这个网站，但不知道访问网站的数据流中哪些是翻墙流量，哪些是正常浏览行为，因为墙没有密钥无法解密。只有https服务器才能正确区分，因为它有解密用的密钥，可以解密并获取正确的数据流。<br>\n<br>\n这次墙的实验叫做“中间人攻击”，意思是，在用户不知情的情况下、偷偷地把用户的流量转发到某台代理服务器上，再由代理服务器向目标网站（这次攻击的目标是Github）发送数据。反之亦然。这台代理服务器就是“中间人”。<br>\n由于https加密解密需要使用一种叫做“证书”的东西，同时还有跟这个证书相关的两把钥匙（一把公用钥匙，解密用的，叫做公钥；一把仅供客户端和服务器端私下使用的钥匙，加密用的，叫做私钥）。<br>\n中间人可以解密来自Github的数据，但却无法以Github的名义再次加密数据并发送给用户，因为中间人没有加密用的Github私钥。那怎么办呢？只能自己造一张假证书，利用这张假证书加密数据再发回给用户。<br>\n反方向也一样。<br>\n于是，中间人不但知道Github发送了什么数据给用户，也很清楚用户发送了什么数据给Github<br>\n<br>\n把“Github”字眼替换成翻墙用的服务器，答案就很清楚了吧？","date":"2020-03-28","agreeCount":10,"discussionCount":0}