{"type":"article_comment","id":394129,"parentType":"article","parentId":19554,"uid":50440,"contents":"<a href=\"https://pincong.rocks/article/item_id-394080#\"><blockquote>你说的这些其实不是大问题了已经因为目前软件的设计越拉越平台无关，cpp，rust之类的native ...</blockquote></a><br>\n<br>\n大型 IT 公司里正好相反, CPP的服务始终是主流, 没有要被取代的迹象. 而且越是成熟稳定的service越是有可能切换到 C/C++上. 这里有个关于Google的讨论: https://www.quora.com/Which-programming-languages-does-Google-use-internally . 其中提到 Google Search一开始是用 Java和Python实现的, 但是由于各种稳定性的问题, 最终整个前端加爬虫模块都用C++重写了. 道理也很简单, 哪怕C++实现只快1%, Google也可以节约1%的机器, 在Google的规模上这就是很多很多钱了. 而且对最精通系统构架的程序员来说, 直接使用 C/C++ 可以写出最稳定的程序, 而不是依靠JDK这种runtime.<br>\n<br>\n另外本人也用过超算, 超算的软件复杂度是远远比不上数据中心里的各种服务器的 (基本上就是一个裸的linux加上一些应用软件), 而且他们运算的任务也是比较单一的 (比如就是解大型方程组), 所以更换新的CPU之后有啥问题都比较容易发现和修复. 大型IT公司的数据中心里跑的service都是难以想像地复杂, 没有人敢打包票说把跑google search的机器的CPU从intel换成amd之后还能跑的好好的. 这种 架构加上软件栈的切换都是以三年起规划的, 所以在整个软件生态绑定在Intel上的情况, 没有特别大的好处公司是不会去切换到 AMD的, 更不要说 ARM了. (所以为什么高通近些年也放弃了 ARM 服务器)","date":"2020-05-28","agreeCount":4,"discussionCount":0}