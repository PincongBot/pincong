{"type":"article_comment","id":380887,"parentType":"article","parentId":18920,"uid":18160,"contents":"https://youtu.be/iRK4AAIOtVg<br>\n<b>聽歌和代碼更配</b>~<br>\n<br>\n先講講 <br>\nsrc_cpp\\elf\\base\\sharedmem.h<br>\n<br>\n第一個函數state2mem ，功能 ： 把c++内存結構轉爲python認識的内存<br>\nstate 表示 C++ 定義的内存結構<br>\nmem 表示 c++ 和 python互相訪問的公共内存<br>\n<br>\nMessage&amp; msg 表示 server收到client的請求【c++請求調用python】<br>\n這樣就會調用pytorch進行神經網絡操作<br>\n比如 C++ 給 Python發送了 train ，那麽 python就調用 update<br>\n比如 C++ 給 Python發送了 actor，那麽 python就調用 forward<br>\n<br>\nSharedMem&amp; mem 表示c++和 python的共享内存 <br>\n<br>\ndatum-&gt;state_to_mem_funcs.transfer(idx, mem); 表示調用 <b>之前注冊的函數</b><br>\n之前注冊的函數，什麽時候注冊的？？？<br>\nsrc_cpp\\elfgames\\go\\common\\game_feature.h<br>\n的registerExtractor 函數 addFunction 表示 注冊<br>\n<br>\n所以，所謂的遍歷調用之前的函數，就是調用 registerExtractor的addFunction函數<br>\n講完了第一個函數~<br>\n<br>\nmem2state 這個是第二個函數 道理很簡單，反過來而已<br>\ne.addClass&lt;GoReply&gt;() 後面的 addFunction 這些函數就是了<br>\n<br>\n總結:&nbsp; addField後面的 addFunction 就是 state2mem<br>\naddClass 後面的 addFunction 就是 mem2state<br>\n<br>\n最後講講SharedMem<br>\nwaitBatchFillMem Python側調用，表示Python等待C++發送指令<br>\n收到以後，調用state2mem ，對共享内存賦值，然後調用python綁定的回調函數<br>\n有人會問，python回調函數是什麽，，，<br>\n<br>\n在scripts目錄下 搜索 GC.reg_callback 這行代碼<br>\n前面是key，表示cmd，後面表示對應的回調函數<br>\n<br>\n<br>\n<br>\n完整過程<br>\nC++ 這邊 代碼<br>\nsrc_cpp\\elfgames\\go\\train\\game_train.cc <br>\n調用了 client_-&gt;sendBatchWait({<b>\"train\"</b>}, funcPtrsToSend); <br>\n<br>\nPython 這邊代碼<br>\nscripts\\elfgames\\go\\train.py<br>\n因爲 GC.reg_callback(\"train\", train) 注冊了 字符串【cmd】為“train”的回調函數 train<br>\n後面 你懂的，因爲state2mem，所以 ，python的參數就是這麽來的。。。<br>\n<br>\npython調用c++的函數，是pybind<br>\npython訪問c++的内存，就是我剛才説的<br>\n<br>\n<br>\n--------------------------------------------------------------------<br>\n前向過程 C++ 調用python的代碼是 src_cpp\\elf\\ai\\ai.h 文件的<br>\nclient_-&gt;sendWait(<b>targets_</b>, &amp;funcs_s);<br>\n或者<br>\nclient_-&gt;sendBatchWait(<b>targets_</b>, ptr_funcs_s);<br>\n【<b>targets_ 就是 actor_black 或者 actor_white</b>】<br>\n自己看python代碼 GC.reg_callback(actor_name, 都綁定了什麽函數就可以了~<br>\n<br>\n反向過程 也就是訓練， 代碼是 <br>\nsrc_cpp\\elfgames\\go\\train\\game_train.cc <br>\n調用了 client_-&gt;sendBatchWait({<b>\"train\"</b>}, funcPtrsToSend);","date":"2020-05-18","agreeCount":0,"discussionCount":0}