{"type":"article_comment","id":411999,"parentType":"article","parentId":19299,"uid":8647,"contents":"乐见更多关于CS的文章，但这篇短文对没摸过代码的小白非常非常得不友好，他们看完也不会认为这个跟他们有多大关系，而且讲得含混没有具体的代码示例。<br>\n<br>\n用伪代码描述闭包留给我的印象：<br>\n<br>\n<br>\n外部代码环境<br>\n<br>\n<br>\n（以下用底色标示的部分为闭包，“{”与“}”分别代表函数声明的开始与结束。）<br>\n<br>\n<blockquote>声明函数A {<br>\n<br>\n&nbsp;&nbsp;&nbsp; 在函数A里声明某些变量<br>\n<br>\n&nbsp;&nbsp;&nbsp; 在函数A里声明函数B {<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在函数B里利用刚才在函数A里函数B外声明过的那些变量进行运算<br>\n&nbsp;&nbsp;&nbsp; <br>\n&nbsp;&nbsp;&nbsp; }<br>\n<br>\n&nbsp;&nbsp;&nbsp; 结束函数B的声明后在函数A里向闭包外输出某个运算结果<br>\n<br>\n}</blockquote><br>\n<br>\n（以上用底色标示的部分为闭包，“{”与“}”分别代表函数声明的开始与结束。）<br>\n<br>\n<br>\n外部代码环境<br>\n<br>\n<br>\n闭包（也就是上面有底色部分的代码）如其名字那样，它是相对自给自足和独立于外部代码环境的。也就是说，你把闭包（也就是上面有底色的那个代码块）添加到与其同种语言的任何其他代码里，都不会影响被添加了闭包的这个代码原本的正常运行。更具体地讲，即使外部代码环境中的变量使用了与闭包里的变量相同的变量名，彼此间也不会产生干扰。","date":"2020-06-13","agreeCount":0,"discussionCount":0}