{"type":"article_comment","id":389179,"parentType":"article","parentId":19299,"uid":22657,"contents":"<pre>lambda n : (lambda n: (lambda a, b: b.reverse() or  (lambda d: d.reverse() or ''.join(d))((lambda b, c: ([a[x][b[x] - 1] for x in range(len(b)) if b[x] != 0 ]) + c)(b if len(b) &lt;= 3 else b[:3], [] if len(b) &lt;= 3 else [a[-1][-1] * b[-1]])) )((lambda sgen: (lambda ra: [sgen(x, 0).split() + sgen(x, 1).split() for x in [ra[x: x+3] for x in range(0, len(ra) - 2, 2)]])(\"IVXLCDM\"))(lambda arr, bol: ' '.join([(arr[1] if bol else \"\") + arr[0] * x for x in range(1,4)]) + \" {}{} {}\".format(arr[0], arr[1 + bol], arr[1 + bol])), (lambda a, b: list(map(int, (lambda f, a, b: f(f, a, b))((lambda f, a, b: [a[0]] + f(f, divmod(a[1], b), b / 10) if b &gt;= 10 else list(a)), divmod(a, b) if n &gt; 9 else [n], b / 10))))(n, (lambda m: 1 if m &lt; 10 else 10 if m &lt; 100 else 100 if m &lt; 1000 else 1000)(n))))(n) if n &gt; 0 else ''</pre>","date":"2020-05-25","agreeCount":1,"discussionCount":0}