{"type":"article_comment","id":288808,"parentType":"article","parentId":5850,"uid":18160,"contents":"vmess代码，做个标记先，免得又忘了<br>\n客户端部分，看outbound部分<br>\n代码在v2ray-core\\proxy\\vmess\\outbound\\outbound.go<br>\n看func Process函数<br>\nrawConn, err := dialer.Dial(ctx, rec.Destination()) 表示和v2ray服务器连接<br>\n开始握手<br>\n调用v2ray-core\\app\\proxyman\\outbound\\handler.go<br>\n看func Dial函数<br>\ninternet.Dial(ctx, dest, h.streamSettings) 表示调用底层代码<br>\n具体internet调用哪个，是根据streamSettings，比如我用了websocket<br>\n就看代码v2ray-core\\transport\\internet\\websocket\\dialer.go里的Dial函数<br>\n如果是其他协议，查看\\transport\\internet\\目录下对应目录的\\dialer.go里的Dial函数<br>\n其实没有必要细看。。。就是标准的握手<br>\n<br>\n服务端部分，看inbound部分<br>\n如果和我一样是websocket协议，就看v2ray-core\\transport\\internet\\websocket\\hub.go<br>\n里的ServeHTTP，<br>\n复习下websocket协议规范<br>\n1.浏览器请求websocket ，发送了一个http请求<br>\n2.服务端，返回一个101的应答【HTTP/1.1 101 Switching Protocols】<br>\n3.然后建立了wss连接<br>\n<br>\n。。。。<br>\nv2ray客户端 收到 浏览器发送socks5的握手<br>\n代码在v2ray-core\\proxy\\socks\\server.go的func (s *Server) Process这里<br>\ns.transport(ctx, reader, conn, dest, dispatcher)<br>\nlink, err := dispatcher.Dispatch(ctx, dest)<br>\ndispatcher.Dispatch这个会转向v2ray-core\\proxy\\vmess\\outbound\\outbound.go<br>\n的Process函数【你的outbound配置是vmess的前提下，否则参考proxy对应目录的outbound】<br>\n之后的过程，我前面已经讲过了。。。<br>\n<br>\n总结下<br>\ninbound的代码，集中放在\\proxy目录下，对应的子目录，表示具体协议的实现<br>\noutbound的代码，集中放在\\transport\\internet目录下，对应的子目录，表示具体协议的实现<br>\n具体协议实现，不用管它，都是标准协议实现而已<br>\n<br>\n如果看到dispatcher.Dispatch这句话，表示调用了outbound的process函数，返回的是两个conn的link","date":"2020-03-09","agreeCount":2,"discussionCount":0}