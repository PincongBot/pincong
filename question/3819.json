{"type":"question","id":3819,"title":"匿名的“邮箱验证”的可能性和不可能性","uid":920,"topics":[],"contents":"邮箱仅用于有效性验证，不记录在已生成账户中（也就是说，邮箱是一次性的）。<br>\n那么可以设计这样一个流程：<br>\n<br>\n注册者提供邮箱；<br>\n服务器生成邮箱有效地址的hash；<br>\n如果表1包含邮箱hash，拒绝，流程结束；<br>\n服务器向邮箱发送一个x分钟内有效的，用于生成账户的，包含该邮箱hash的链接；<br>\n服务器在表2中以'链接hash':('邮箱hash','生成hash的epoch')的形式储存；<br>\n如果服务器收到该连接的访问并成功生成账户，则从表2中获取邮箱hash添加到表1，并从表1中删除该项；<br>\n<br>\n并且建立任务：<br>\n删除表2中超过x分钟的项。<br>\n<br>\n这个流程在实际操作上的问题是：<br>\n1，要维护两个表；<br>\n2，表1会无限制增长，查询速度越来越慢，最终拖垮服务器；<br>\n3，表2需要很频繁地遍历；<br>\n4，表1泄露导致短邮箱被暴破。<br>\n<br>\n那么，匿名的“邮箱验证”是否可能？是否可行？<br>\n<br>\n<br>\n更新：<br>\n还要考虑到邮箱供应商的安全性，即是否会泄露“该用户在该网站有注册行为”。<br>\n这点可以通过对注册链接进行公钥加密的方法解决，现有的方案如 <a href=\"https://github.com/dchest/tweetnacl-js\" rel=\"nofollow noreferrer noopener\" target=\"_blank\">tweetnacl-js</a> 和 <a href=\"https://github.com/tonyg/js-nacl\" rel=\"nofollow noreferrer noopener\" target=\"_blank\">js-nacl</a> 。<br>\n注册者发送邮箱和公钥，服务器将链接用该公钥加密后发送至邮箱，注册者用私钥解密该链接。","date":"2019-04-29","agreeCount":0,"discussionCount":2}