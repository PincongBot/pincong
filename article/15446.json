{"type":"article","id":15446,"title":"观超级马里奥兄弟4-2世界纪录故事有感","uid":20295,"topics":[7055,81,7012],"contents":"<a href=\"https://www.youtube.com/watch?v=i1AHCaokqhg\" rel=\"nofollow noreferrer noopener\" target=\"_blank\">https://www.youtube.com/watch?v=i1AHCaokqhg</a><br>\n<br>\n如能听懂或看字幕看懂可以略过下面对视频描述的部分。<br>\n<br>\nSummoning Salt 的这段与 andrewg1990 和 kosmic 合作研究的视频讲了超级马里奥兄弟竞速玩家如何多年以来坚持不懈地不断突破极限、追求更快的过关纪录，在这小众领域留下一段佳话。他们的热忱和探索精神，给我留下了不能磨灭的印象。<br>\n<br>\n视频先讲了快速过关的主要思路：跑跳到达特定地点，从升降板起跳顶起一方块，再从地面顶起一不可见方块，沿藤蔓爬上天空，直接进入第8关。<br>\n然后又介绍了 warp zone，即分支区域。而该关卡中存在两个此区域，也就有两个 exit zone （出口）。游戏只能在同一时间加载一个区域，那如何判断该加载哪个区域呢？ 游戏是根据画面所移动到的位置来加载的。那么如果能让游戏在第二个分支入口处加载第一个分支区域，就能省下爬藤蔓的时间。<br>\n这其实是可行的。玩家可以借助 <a href=\"https://zh.wikipedia.org/wiki/TAS%E7%AB%B6%E9%80%9F\" rel=\"nofollow noreferrer noopener\" target=\"_blank\">TAS</a> 部署逐帧键盘指令，从而进行研究。Mana 在2004年用这工具成功在顶起一方块后在墙中行走，从而使马里奥的位置在画面上从左起112像素向右移动了20像素，从而在第二个出口加载了第一个分支区域，那么跳过爬藤蔓过程的目的就实现了。但这几乎不可能由人实现，因为要多次精确起跳，而且只要错过了第二个出口的管道一像素，就功亏一篑。<br>\n同在2004年，Michael F 借助 TAS 发现可以通过跳到屏幕上方方块，在藤蔓从屏幕上消失后往左跳并出现在屏幕右侧，来达到这一目的。但这种情况属于游戏瑕疵，所以这种方法没有流行。<br>\n再后来，2007年，andrewg1990 发现了一个新方法 The Wrong Trap：在特定地点跳跃转身，从而向右移动7到10个像素。这是可以通过 XPOS Rom Hack ，也就是一个把时间改成左起像素数的修改版本，来验证的。他需要如此起跳3次，以达到右移至少20像素的要求。而右移像素数越多，在第二个出口的管道处可立足的像素数就越多。在 Weirwindle 的帮助下，他找到了最佳的3个起跳地点，以最大程度上节省时间。<br>\n接下来就要讲解 The 21-Frame Rule：除了8-4（最后一关），每个关卡都是在最后每21帧检查一次是否过关的，而不是每一帧检查一次，这就等于0.35秒。一旦错过一次检查，就要等下一次，也就是0.35秒后。以 darbian 的比喻，就是一趟巴士错过后，要等下一班。<br>\nandrewg1990又研究出了 Fast 4-2，也就是只跳两次，每次移10帧。但这也对玩家提出了高要求：能移10帧十分靠运气，而且落到第二个出口的管道上时必须一像素不差。Patrick LeMieux 进行了数百次尝试，并把各次的图像叠加在一起，只有一次 fast 4-2 成功。这种尝试在玩家中持续了数年之久。由于成功率太低，4-2也变得不受欢迎，玩家开始把精力移到别的关卡上。直到2016年，玩家还认同这一方法，但非常不情愿在这上面花时间。Weirwindle 在2011年找到过一个跳跃方法，但移动的像素数只有17，而且需要同时按左右键，而这也不能在游戏机上实现，所以这方法没有得到重视。但2016年 andrewg1990 发现这不需要同时按左右两键，而且再加上一个跳跃就可以超过20像素。但这也是相当困难的。<br>\n2017年 andrewg1990 想起了2004年 Michael F 的方法，曾经耗时过多，时隔多年后再尝试。没想到，经过了多年练习，他竟然成功了。可是它还是相比于 Fast 4-2 没有更高的成功率，缩短的时间也差不多。其他玩家也试过，结果也相同。<br>\n最后，在2017年，xx_420_blazit_xx 发现了最终方案。人们以前不关注<a href=\"https://zh.wikipedia.org/wiki/像素#子像素\" rel=\"nofollow noreferrer noopener\" target=\"_blank\">子像素</a>，因为它根本难以控制。能否穿墙正是由子像素是否相同决定的。xx_420_blazit_xx 发现关卡开头的子像素总是相同的，而且能穿墙的子像素正是关卡开头时的子像素。这种穿墙方法最终由于其稳定性和效率得到普遍认可。<br>\n<br>\n视频循循善诱、条理清晰。不论从内容还是叙事方式上看，都可谓品质优良。不足之处在于留下了许多疑问：为什么穿墙和加载错误的分支区域不算作游戏瑕疵；为什么不以所到达的出口位置，而是以画面位置决定所加载的分支区域；为什么只能加载一个分支区域；为什么关卡末尾以21帧为一批而非逐帧判定；什么是子像素；为什么子像素可以决定能否穿墙。<br>\n直至今日，这些竞速玩家依然在不断打破纪录，突破自我： <a href=\"https://www.speedrun.com/smb1\" rel=\"nofollow noreferrer noopener\" target=\"_blank\">https://www.speedrun.com/smb1</a><br>\n总而言之，这视频也让人学到成功的重要条件：不但要有出众的创新和钻研能力，还要善于合作、多年如一日地努力去尝试。而这都要有源源不断的动力，那就是热爱。","date":"2020-03-01","agreeCount":16,"discussionCount":0}