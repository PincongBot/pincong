{"type":"article","id":18170,"title":"深入浅出【迷雾通】之第二篇","uid":18160,"topics":[6220,112,406],"contents":"<center>本文章由 @为啥改名还要葱 冠名赞助！</center><br>\n<center>他赞助了本文<b>1600</b>葱！</center><br>\n<br>\n感嘆作者的更新速度！我每次讀完代碼，打算開始寫文章，作者就又提交代碼了。。。<br>\n<br>\n還是繼續第一篇的主旋律【翻墻】，也就是客戶端到網橋這部分代碼。<br>\n如果，今天我能説完網橋部分，我在下一篇更新出口通信。也就是tinyss協議【講起來挺多的】<br>\n<br>\n我們從網橋開始講起~<br>\n/cmd/geph-bridge/main.go 我們注意到listenLoop函數<br>\n人話版本：在網橋服務器上啓動隨機一個TCP的監聽端口，來接收客戶端發來的TCP請求<br>\n收到請求以後，通過cshirt2協議收發報文，處理邏輯在cmd/geph-bridge/handle.go的handle函數<br>\n<br>\n那麽問題來了，客戶端如何知道網橋的地址呢？<br>\n首先，網橋往 https://checkip.amazonaws.com 這個地址，發送一個GET請求，應答就是自己的公網IP<br>\n然後，網橋往 https://binder.geph.io/v2/add-bridge 這個地址，發送一個GET請求，添加自己的信息<br>\n{<br>\n&nbsp;&nbsp;&nbsp; binderKey&nbsp;&nbsp; 用來鑒權，防止未授權的服務器發送此請求，把不安全的網橋加入到binder<br>\n&nbsp;&nbsp;&nbsp; cookie&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 32字節隨機數，後面生成密鑰用到<br>\n&nbsp;&nbsp;&nbsp; 網橋的公網地址&nbsp;&nbsp;&nbsp; 包含IP:Port<br>\n}<br>\n現在輪到客戶端了~【隱去盲簽相關過程】<br>\n首先，客戶端往&nbsp; https://netlify.com/v2/get-bridges 這個地址，發送一個GET請求【隨便一個CDN地址，不一定這個】<br>\n然後，客戶端得到了網橋信息<br>\n最後， 通過 getSingleTCP 去連接網橋，如果失敗，通過getWarpfrontCon 去連接網橋<br>\n<br>\n重點講解 getSingleTCP ，也就是cshirt2協議，因爲getWarpfrontCon和Tor的meek原理一樣，實現差不多，沒有講解的價值【講了好幾次了~】<br>\n首先 ， 調用 dialBridge(bi.Host, bi.Cookie)函數去連接服務器，獲得TCP連接【坑爹~】<br>\n{作者隱去了端口，讓我們猜端口號是多少，所以。。。自己改源碼吧}<br>\n<br>\n接著，獲得連接以後，調用cshirt2.Client(cookie, conn)函數<br>\n1.先計算得到自己的私鑰和公鑰<br>\n2.調用 writePK(secret, 0, myPK, false, transport)<br>\n{<br>\n獲取當前時間【秒數 mod 30】，組裝字符串\"handshake-[秒數 mod 30]-false\"<br>\n以cookie為key，mac256(cookie, 組裝的字符串)得到臨時chacha20密鑰，加密自己的公鑰<br>\n得到的密文 ，後面append一堆隨機長度填充，然後發送給服務器<br>\n}<br>\n3.服務器收到handshake以後，返回應答<br>\n4.客戶端讀取前32個字節，就是服務器的公鑰<br>\n{<br>\n獲取當前時間【秒數 mod 30】+/-3秒，組裝字符串\"handshake-[秒數 mod 30+/-3]-true\"<br>\n以cookie為key，mac256(cookie, 組裝的字符串)得到臨時chacha20密鑰，解密報文<br>\n前32個字節就是服務器的公鑰，33-34字節是填充的長度<br>\n}<br>\n5.根據自己的私鑰和服務器的公鑰，通過ECDHE計算得到對稱密鑰SS<br>\n6.mac256(ss, []byte(\"c2s\")) ，得到最終的cshirt2的通信密鑰<br>\n7.然後用chacha20加密解密收發報文就可以了<br>\n-------------------<br>\n8.最後 調用 connThroughBridge(bridgeConn)&nbsp; 往網橋發送<br>\nconn/feedback<br>\nexitName<br>\n來和出口節點橋接<br>\n9.接下來就是通過tinyss協議交互了，第三篇講解~","date":"2020-04-25","agreeCount":20,"discussionCount":0}