{"type":"article","id":1358,"title":"PincongFilter （20190506完成基本功能）","uid":920,"topics":[118],"contents":"不正经的简介：<br>\n你有说话放屁的自由，我就有掩耳捂鼻的权力。<br>\n<br>\n<br>\n<br>\n正经的简介：<br>\n过滤来自特定id的问题、文章、回答及评论，对匿名用户无效。<br>\n同时对于未被过滤的非匿名用户，在其用户名或头像旁显示该用户的id。<br>\n<s>目前只能通过修改代码中特定变量的方法添加所需过滤的id。</s><br>\n<br>\n本来打算放在pastebin的，想想还是算了……<br>\n不接受来自浏览器兼容性的bug report。<br>\n<br>\n20190430更新：<br>\n过滤文章的评论。<br>\n修复额外的显示用户id的行为。<br>\n<br>\n20190506更新：<br>\n显示过滤计数。<br>\n过滤列表修改/导入/导出。<br>\n<br>\n<br>\n<s>P.S. 但是无法过滤文章的评论，因为这些评论的用户信息都没有data-id。这个要看网站后台的心情了。</s> 已修复<br>\nP.S. 当然网站后台想要封杀这个脚本也非常容易。这个也看网站后台的心情了。<br>\n<br>\n<pre><br>\n// ==UserScript==<br>\n// @name&nbsp; &nbsp; &nbsp; &nbsp; PincongFilter<br>\n// @namespace&nbsp;  PincongFilter<br>\n// @match&nbsp; &nbsp; &nbsp;  https://pincong.rocks/*<br>\n// @version&nbsp; &nbsp;  1<br>\n// @grant&nbsp; &nbsp; &nbsp;  none<br>\n// @run-at&nbsp; &nbsp; &nbsp; document-start<br>\n// ==/UserScript==<br>\n<br>\n(function(){<br>\n&nbsp; &nbsp; let doc=document;<br>\n&nbsp; &nbsp; let html=doc.documentElement;<br>\n&nbsp; &nbsp; let map=function(f,i){for(let n of i)f(n);}<br>\n&nbsp; &nbsp; let newtag=function(t){return doc.createElement(t);}<br>\n&nbsp; &nbsp; let newtext=function(s){return doc.createTextNode(s);}<br>\n&nbsp; &nbsp; let addev=function(n,e,f){return n.addEventListener(e,f);}<br>\n&nbsp; &nbsp; let selid=function(i){return doc.getElementById(i);}<br>\n&nbsp; &nbsp; let seltag=function(t){return doc.getElementsByTagName(t);}<br>\n&nbsp; &nbsp; let selcss=function(c,r){return (r?r:doc).querySelectorAll(c);}<br>\n&nbsp; &nbsp; let selcss1=function(c,r){return (r?r:doc).querySelector(c);}<br>\n&nbsp; &nbsp; let hasattr=function(n,a){return n.hasAttribute(a);}<br>\n&nbsp; &nbsp; let getattr=function(n,a){return n.getAttribute(a);}<br>\n&nbsp; &nbsp; let setattr=function(n,a,v){n.setAttribute(a,v);}<br>\n&nbsp; &nbsp; let delattr=function(n,a){if(hasattr(n,a))n.removeAttribute(a);}<br>\n&nbsp; &nbsp; let appendnode=function(r,n){n?r.appendChild(n):null;}<br>\n&nbsp; &nbsp; let delnode=function(n){n?n.remove():null;}<br>\n<br>\n&nbsp; &nbsp; let watch=function(n,p,f){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let config={};<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let leastprops=['childList','attributes','characterData'];<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let validconfig=false;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let watcher=new MutationObserver(f);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; map(n=&gt;config[n]=true,p);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; for(let prop of leastprops)<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; validconfig=validconfig||config[prop];<br>\n&nbsp; &nbsp; &nbsp; &nbsp; if(!validconfig)config[leastprops[0]]=true;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; watcher.observe(n,config);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; addev(window,'beforeunload',()=&gt;watcher.disconnect());<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let hiddenstart=function(r,f){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; r.hidden=true;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; addev(doc,'DOMContentLoaded',()=&gt;{f();r.hidden=false;});<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let clicknode=function(n){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let e=document.createEvent('MouseEvents');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; e.initEvent('click',true,true);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; n.dispatchEvent(e);<br>\n&nbsp; &nbsp; };<br>\n<br>\n&nbsp; &nbsp; let cmpstr=function(a,b){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let lencmp=a.length-b.length;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; if(lencmp===0)<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return a&lt;b?-1:1;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; return lencmp;<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let synclist=function(src,dst){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; dst.length=0;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; for(let item of src){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(dst.includes(item))continue;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(item.length===0)continue;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dst.push(item)<br>\n&nbsp; &nbsp; &nbsp; &nbsp; }<br>\n&nbsp; &nbsp; &nbsp; &nbsp; dst.sort(cmpstr);<br>\n&nbsp; &nbsp; }<br>\n<br>\n<br>\n<br>\n&nbsp; &nbsp; // question or article<br>\n&nbsp; &nbsp; let question_selector='div.aw-common-list&gt;div.aw-item';<br>\n&nbsp; &nbsp; // answer for question or comment for article<br>\n&nbsp; &nbsp; let answer_selector='div.aw-item[id^=&quot;answer_list_&quot;]';<br>\n&nbsp; &nbsp; // comment for answer or comment<br>\n&nbsp; &nbsp; let comment_selector='div.aw-comment-box&gt;div.aw-comment-list&gt;ul&gt;li';<br>\n&nbsp; &nbsp; // prefix of user path<br>\n&nbsp; &nbsp; let user_prefix='/people/';<br>\n&nbsp; &nbsp; // blacklist of userid as string<br>\n&nbsp; &nbsp; let blacklist=[];<br>\n&nbsp; &nbsp; // static blacklist of userid, not visiable in UI<br>\n&nbsp; &nbsp; let staticlist=[];<br>\n<br>\n&nbsp; &nbsp; let counter=0;<br>\n<br>\n&nbsp; &nbsp; let filter_answer=function(node){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let usernode=selcss1('div.mod-head a.aw-user-name[data-id]',node);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; // only do on non-anonymous user<br>\n&nbsp; &nbsp; &nbsp; &nbsp; if(usernode){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let userid=getattr(usernode,'data-id');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(staticlist.includes(userid)||blacklist.includes(userid)){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.debug('filter answer:',usernode.textContent);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; delnode(node);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; counter+=1;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; showcounter();<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; usernode.textContent+=' ('+userid+')';<br>\n&nbsp; &nbsp; &nbsp; &nbsp; }<br>\n&nbsp; &nbsp; &nbsp; &nbsp; watch(node,['subtree'],commentfilter);<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let filter_question=function(node){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let usernode=selcss1('a.aw-user-name[data-id]:first-child',node);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; // anonymous user, do nothing<br>\n&nbsp; &nbsp; &nbsp; &nbsp; if(!usernode)return;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let userid=getattr(usernode,'data-id');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; if(staticlist.includes(userid)||blacklist.includes(userid)){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.debug('filter question:',userid);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; delnode(node);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; counter+=1;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; showcounter();<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; }<br>\n&nbsp; &nbsp; &nbsp; &nbsp; // anonymous user, do nothing<br>\n&nbsp; &nbsp; &nbsp; &nbsp; if(userid.length===0)return;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let p=newtag('p');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(p,newtext(userid));<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(usernode,p);<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let filter_comment=function(node){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let usernode=selcss1('a.aw-user-name.author[data-id]:not([data--])',node);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; // anonymous user, do nothing<br>\n&nbsp; &nbsp; &nbsp; &nbsp; if(!usernode)return;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let userid=getattr(usernode,'data-id');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; if(staticlist.includes(userid)||blacklist.includes(userid)){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.debug('filter comment:',usernode.textContent);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; delnode(node);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; counter+=1;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; showcounter();<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; }<br>\n&nbsp; &nbsp; &nbsp; &nbsp; usernode.textContent+=' ('+userid+')';<br>\n&nbsp; &nbsp; &nbsp; &nbsp; setattr(usernode,'data--','');<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let commentfilter=function(){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; map(filter_comment,selcss(comment_selector))<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let loadblacklist=function(list){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; try{<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let _str=localStorage.getItem('PincongFilter');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(_str===null)_str=JSON.stringify({'filter':[]});<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let _data=JSON.parse(_str);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; synclist(_data['filter'],list);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; }catch(e){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.error('error:',e);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; }<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let saveblacklist=function(list){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; try{<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let _data={'filter':[]}<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let _str=selid('PincongFilter-blacklist').value;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; synclist(_str.split('\\<br>\n'),_data['filter']);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; localStorage.setItem('PincongFilter',JSON.stringify(_data));<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; loadblacklist(list);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; }catch(e){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.error('error:',e);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; }<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let impblacklist=function(ev){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let finput=newtag('input');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; finput.type='file';<br>\n&nbsp; &nbsp; &nbsp; &nbsp; finput.accept='.json';<br>\n&nbsp; &nbsp; &nbsp; &nbsp; finput.multiple=false;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; finput.oninput=function(iev){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(iev.target.files.length&lt;1)return;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let reader=new FileReader();<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload=function(rev){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try{<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let _data={'filter':[]};<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let json=JSON.parse(rev.target.result);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let area=selid('PincongFilter-blacklist');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; synclist(json['filter'],_data['filter']);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; area.value=_data['filter'].join('\\<br>\n');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; saveblacklist(blacklist);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }catch(e){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.error('error:',e)<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(let file of iev.target.files)<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; }<br>\n&nbsp; &nbsp; &nbsp; &nbsp; clicknode(finput);<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let expblacklist=function(ev){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let data=new Blob([localStorage.getItem('PincongFilter')],<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {type:'application/json'})<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let url=URL.createObjectURL(data);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let a=newtag('a');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; a.href=url;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; a.download='PincongFilter.json';<br>\n&nbsp; &nbsp; &nbsp; &nbsp; clicknode(a);<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let changeblacklist=function(ev){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; saveblacklist(blacklist);<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let createui=function(){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let parent=selcss1('nav&gt;ul.nav');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; if(!parent)return;<br>\n<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let root=newtag('li');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let a=newtag('a');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let con=newtag('span');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let div=newtag('div');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let area=newtag('textarea');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let btndiv=newtag('div')<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let impbtn=newtag('button');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; let expbtn=newtag('button');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(parent,root);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(root,a);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(root,div);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(a,newtext('PincongFilter'));<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(a,con);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(div,area);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(div,btndiv);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(btndiv,impbtn);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(btndiv,expbtn);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(impbtn,newtext('Import'));<br>\n&nbsp; &nbsp; &nbsp; &nbsp; appendnode(expbtn,newtext('Export'));<br>\n<br>\n&nbsp; &nbsp; &nbsp; &nbsp; a.href='javascript:;';<br>\n&nbsp; &nbsp; &nbsp; &nbsp; con.id='PincongFilter-counter';<br>\n&nbsp; &nbsp; &nbsp; &nbsp; div.classList.add('aw-dropdown','pull-right','hidden-xs');<br>\n<br>\n&nbsp; &nbsp; &nbsp; &nbsp; area.id='PincongFilter-blacklist';<br>\n&nbsp; &nbsp; &nbsp; &nbsp; area.placeholder='One user id per line.';<br>\n&nbsp; &nbsp; &nbsp; &nbsp; area.rows=Math.max(blacklist.length+1,1);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; if(blacklist.length)<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; area.cols=blacklist[blacklist.length-1].length;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; area.value=blacklist.join('\\<br>\n');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; addev(area,'input',changeblacklist);<br>\n<br>\n&nbsp; &nbsp; &nbsp; &nbsp; btndiv.style.cssFloat='right';<br>\n<br>\n&nbsp; &nbsp; &nbsp; &nbsp; addev(impbtn,'click',impblacklist);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; addev(expbtn,'click',expblacklist);<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let showcounter=function(){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; if(counter){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let span=selid('PincongFilter-counter');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; span.textContent=[' (',counter,')'].join('');<br>\n&nbsp; &nbsp; &nbsp; &nbsp; }<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; let mainfilter=function(){<br>\n&nbsp; &nbsp; &nbsp; &nbsp; loadblacklist(blacklist);<br>\n&nbsp; &nbsp; &nbsp; &nbsp; createui();<br>\n&nbsp; &nbsp; &nbsp; &nbsp; map(filter_answer,selcss(answer_selector));<br>\n&nbsp; &nbsp; &nbsp; &nbsp; map(filter_question,selcss(question_selector));<br>\n&nbsp; &nbsp; }<br>\n<br>\n&nbsp; &nbsp; hiddenstart(html,mainfilter);<br>\n})()<br>\n</pre>","date":"2019-04-26","agreeCount":7,"discussionCount":0}