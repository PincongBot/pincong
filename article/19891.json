{"type":"article","id":19891,"title":"【霏艺所思】什么是反应器（Reactor）和前摄器（Proactor）？","uid":18160,"topics":[9007],"contents":"我已经说了<b>，我不想继续讨论翻墙的事情。。。</b><br>\n<br>\n# 什么是同步？什么是异步？<br>\n这种基本概念，其实网上一堆。。。我再来一次吧！<br>\n我给 XXX 打了一个电话，这个就是同步消息！<br>\n我给 XXX 寄了一封邮件，这个就是异步消息！<br>\n怎么理解呢？<br>\n打电话，我和 XXX 的通信 是 “实时”的，我说的内容， XXX 可以即时收到，体现了“实时性”。<br>\n发邮件，我和 XXX 的通信 不是 “实时”的！我寄完信，根本不知道 XXX 会不会去读，甚至无法知道他能不能收到！<br>\n<br>\n# 什么是CSP？什么是Actor？<br>\n这种基本概念，其实网上一堆。。。我再来一次吧！<br>\n继续用寄信给你们举例子！<br>\n寄信，要信箱！这个能理解吧？<br>\n<b>Actor模型</b><br>\n如果每个收信人，都有自己的独立信箱，这个就是actor模型。<br>\n每个收信人都是一个Actor，他们有自己独立的信箱。<br>\n其他Actor作为发信人，通过 向其他Actor的信箱寄信，完成消息传递。<br>\n代码大概长这样<br>\n```伪代码<br>\n发信人 = new Actor()<br>\n收信人 = new Actor()<br>\n邮递员 = new ActorManager()<br>\n<br>\n发信人告诉邮递员自己的信箱地址<br>\n收信人告诉邮递员自己的信箱地址<br>\n邮递员。派发信件（发信人，收信人，信件）<br>\n```<br>\n<b>CSP模型</b><br>\n<b>不是按人来设置信箱，而是根据事情。</b><br>\n比如，我投诉戴尔电脑某某问题，就给戴尔寄信，但是我不知道戴尔的哪个员工会收到。<br>\n再比如，我给微软提bug，我也不知道哪个人可以收到我的信。<br>\n<b>也就是说某类人可以共用一个信箱</b>！<br>\n```伪代码<br>\n微软的信箱 = new MailBox()<br>\n<br>\n戴尔的信箱 = new MailBox()<br>\n邮递员 = new ActorManager()<br>\n<br>\n邮递员。派发信件（我，微软的信箱，信件）<br>\n```<br>\n和Actor的区别<br>\n每个Actor都有自己的独立信箱！<br>\nCSP的话，n个Actor共用一个信箱。。。<br>\n<br>\n<br>\n# 什么是反应器？什么是前摄器？<br>\n这种基本概念，其实网上一堆。。。我再来一次吧！<br>\n先把线程分两类<br>\n1. 处理器 handler【你自己实现的业务代码逻辑实现】<br>\n2. 分离器 evloop 【调用select poll epoll iocp kqueue的线程】<br>\n<br>\n反应器模式<br>\nIO操作【读/写操作】，<br>\n如果在handler线程，就是反应器模式！<br>\n如果在evloop线程，就是前摄器模式！<br>\n<br>\n反应器模式举例：<br>\neventMap = new Map&lt;event, func&gt;<br>\nevloop线程 通过 select/poll/epoll等判断有什么event<br>\n如果有发生event，<b>就把对应的func 放到handler的信箱里</b>！ <br>\nhandler不停访问自己的信箱，取出信箱里的func并调用【这个func都是IO操作，所以IO操作在handler线程】<br>\n<br>\n前摄器模式举例：<br>\neventMap = new Map&lt;event, func&gt;<br>\nhandler调用IO操作的时候，<b>没有直接操作</b>！<br>\n而是把对应的IO操作，<b>放到evloop的信箱里</b>！<br>\nevloop线程 通过 select/poll/epoll等判断有什么event<br>\n然后把对应的event取出来，去<b>自己的信箱里找到对应的func并执行</b>【IO操作在evloop线程】<br>\n<br>\n至于信箱是用CSP模型，还是Actor模型，是没有指定的。。。你们随意，喜欢就好~<br>\n<br>\n以上都是“单进程多线程模式”的讨论！<br>\n如果是多进程，甚至多服务器。其实道理是类似的。。。<br>\n你可以这么理解多进程/多服务器的CSP<br>\nCSP的信箱，可以是一个数据库【Oracle，MySQL】，也可以是一个消息队列【RabbitMQ，Kafka】<br>\n<br>\n<br>\n==========================<br>\n我也不知道，你们听懂了没有。。。没听懂就留言吧<br>\n我会解答的","date":"2020-06-02","agreeCount":5,"discussionCount":0}