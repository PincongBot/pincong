{"type":"answer","id":284041,"parentType":"question","parentId":22785,"uid":49438,"contents":"<pre>/**<br>\n*图片宽高&amp;文本的高度&amp;&nbsp;保存路径自己调整<br>\n*/<br>\npublicclaDemo{<br>\n<br>\n<br>\n&nbsp;&nbsp;/**<br>\n&nbsp;&nbsp;*图片的宽度<br>\n&nbsp;&nbsp;*/<br>\n&nbsp;&nbsp;publictaticfinalintIMAGE_WIDTH=150;<br>\n<br>\n&nbsp;&nbsp;/**<br>\n&nbsp;&nbsp;*图片的高度<br>\n&nbsp;&nbsp;*/<br>\n&nbsp;&nbsp;publictaticfinalintIMAGE_HEIGHT=30;<br>\n<br>\n<br>\n&nbsp;&nbsp;publictaticvoidmain(String[]arg){<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;Sytem.out.println(\"pleaeinputfucktext:\");<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//获取图片对象<br>\n&nbsp;&nbsp;&nbsp;&nbsp;BufferedImagebufferedImage=generatorImage(getTextFromKeybord(),null);<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//将图片写到本地<br>\n&nbsp;&nbsp;&nbsp;&nbsp;aveImage2Local(bufferedImage,null,\"e:/fuck.png\");<br>\n<br>\n&nbsp;&nbsp;}<br>\n<br>\n<br>\n&nbsp;&nbsp;/**<br>\n&nbsp;&nbsp;*从键盘读取文本<br>\n&nbsp;&nbsp;*return<br>\n&nbsp;&nbsp;*/<br>\n&nbsp;&nbsp;publictaticStringgetTextFromKeybord(){<br>\n&nbsp;&nbsp;&nbsp;&nbsp;Stringtext=newScanner(Sytem.in).next();&nbsp;//也可以使用BufferedReader.next()读取<br>\n&nbsp;&nbsp;&nbsp;&nbsp;returntext;<br>\n&nbsp;&nbsp;}<br>\n<br>\n<br>\n<br>\n<br>\n&nbsp;&nbsp;/**<br>\n&nbsp;&nbsp;*创建图片对象<br>\n&nbsp;&nbsp;*paramimageType&nbsp;图片类型<br>\n&nbsp;&nbsp;*paramimageText要保存到图片上的文本信息<br>\n&nbsp;&nbsp;*return图片对象<br>\n&nbsp;&nbsp;*/<br>\n&nbsp;&nbsp;publictaticBufferedImagegeneratorImage(StringimageText,IntegerimageType){<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//设置图片类型&amp;图片文本的默认值<br>\n&nbsp;&nbsp;&nbsp;&nbsp;imageType=(imageType==null||imageType&lt;0)?BufferedImage.TYPE_INT_RGB:imageType;<br>\n&nbsp;&nbsp;&nbsp;&nbsp;imageText=(StringUtil.iBlank(imageText))?\"空文本\":imageText;<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;BufferedImagebufferedImage=newBufferedImage(IMAGE_WIDTH,IMAGE_HEIGHT,imageType);<br>\n&nbsp;&nbsp;&nbsp;&nbsp;Graphic2Dgraphic=(Graphic2D)bufferedImage.getGraphic();<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//绘制图片背景<br>\n&nbsp;&nbsp;&nbsp;&nbsp;drawImageBG(graphic,null);<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//绘制文本<br>\n&nbsp;&nbsp;&nbsp;&nbsp;drawText2Image(graphic,Color.BLACK,imageText,newFont(\"楷体\",Font.BOLD,20));<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//绘制干扰线<br>\n&nbsp;&nbsp;&nbsp;&nbsp;drawRandomLine(graphic,null,10);<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;returnbufferedImage;<br>\n&nbsp;&nbsp;}<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n&nbsp;&nbsp;/**<br>\n&nbsp;&nbsp;*绘制图片背景<br>\n&nbsp;&nbsp;*paramg绘制对象<br>\n&nbsp;&nbsp;*paramcutomColor自定义背景颜色<br>\n&nbsp;&nbsp;*/<br>\n&nbsp;&nbsp;publictaticvoiddrawImageBG(Graphic2Dg,ColorcutomColor){<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//默认背景为白色<br>\n&nbsp;&nbsp;&nbsp;&nbsp;g.etColor((cutomColor==null)?Color.WHITE:cutomColor);<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//绘制...<br>\n&nbsp;&nbsp;&nbsp;&nbsp;g.fillRect(1,1,IMAGE_WIDTH-2,IMAGE_HEIGHT-2);<br>\n&nbsp;&nbsp;}<br>\n<br>\n<br>\n&nbsp;&nbsp;/**<br>\n&nbsp;&nbsp;*将文本绘制到图片上<br>\n&nbsp;&nbsp;*paramg绘制对象<br>\n&nbsp;&nbsp;*paramcolor文本颜色<br>\n&nbsp;&nbsp;*paramtext文本<br>\n&nbsp;&nbsp;*paramfont字体<br>\n&nbsp;&nbsp;*/<br>\n&nbsp;&nbsp;privatetaticvoiddrawText2Image(Graphic2Dg,Colorcolor,Stringtext,Fontfont){<br>\n&nbsp;&nbsp;&nbsp;&nbsp;g.etColor(color);<br>\n&nbsp;&nbsp;&nbsp;&nbsp;g.etFont(font);<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//定义文本的开始坐标<br>\n&nbsp;&nbsp;&nbsp;&nbsp;inttartX=20,tartY=15;<br>\n&nbsp;&nbsp;&nbsp;&nbsp;for(inti=0;text!=null&amp;&amp;i&lt;text.length();i++){<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取每个文本值<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stringch=text.charAt(i)+\"\";<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.drawString(ch,tartX,tartY);<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tartX+=font.getSize();<br>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n<br>\n&nbsp;&nbsp;}<br>\n<br>\n<br>\n<br>\n&nbsp;&nbsp;/**<br>\n&nbsp;&nbsp;*绘制随机干扰线<br>\n&nbsp;&nbsp;*paramgraphic2D绘制对象<br>\n&nbsp;&nbsp;*paramlineNumber干扰线条数<br>\n&nbsp;&nbsp;*paramcolor干扰线颜色<br>\n&nbsp;&nbsp;*/<br>\n&nbsp;&nbsp;publictaticvoiddrawRandomLine(Graphic2Dgraphic2D,Colorcolor,intlineNumber){<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//默认干扰线为青色<br>\n&nbsp;&nbsp;&nbsp;&nbsp;color=(color==null)?Color.CYAN:color;<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//设置默认的干扰线条数<br>\n&nbsp;&nbsp;&nbsp;&nbsp;lineNumber=(lineNumber&lt;=0)?4:lineNumber;<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;//设置干扰线颜色<br>\n&nbsp;&nbsp;&nbsp;&nbsp;graphic2D.etColor(color);<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;for(inti=0;i&lt;lineNumber;i++){<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//线条的起始坐标----随机<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inttartX=newRandom().nextInt(IMAGE_WIDTH-1);<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inttartY=newRandom().nextInt(IMAGE_HEIGHT-1);<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;intendX=newRandom().nextInt(IMAGE_HEIGHT-2);<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;intendY=newRandom().nextInt(IMAGE_HEIGHT-2);<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;graphic2D.drawLine(tartX,tartY,endX,endY);<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n&nbsp;&nbsp;}<br>\n<br>\n<br>\n&nbsp;&nbsp;/**<br>\n&nbsp;&nbsp;*将生成好的图片保存到本地<br>\n&nbsp;&nbsp;*parambufferedImage&nbsp;图片<br>\n&nbsp;&nbsp;*paramimageFormat图片格式（PNGJPEGGIF...）<br>\n&nbsp;&nbsp;*paramfilePath&nbsp;保存路径<br>\n&nbsp;&nbsp;*/<br>\n&nbsp;&nbsp;publictaticvoidaveImage2Local(BufferedImagebufferedImage,StringimageFormat,StringfilePath){<br>\n&nbsp;&nbsp;&nbsp;&nbsp;try{<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;imageFormat=(StringUtil.iBlank(imageFormat))?\"png\":imageFormat;<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ImageIO.write(bufferedImage,imageFormat,newFileOutputStream(filePath));<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sytem.out.println(\"图片保存成功!===&gt;\"+filePath);<br>\n&nbsp;&nbsp;&nbsp;&nbsp;}catch(IOExceptione){<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thrownewRuntimeException(\"保存图片失败!!\"+e.getMeage());<br>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n&nbsp;&nbsp;}<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n}</pre>","date":"2020-06-06","agreeCount":0,"discussionCount":0}