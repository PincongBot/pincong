{"type":"answer","id":284550,"parentType":"question","parentId":24640,"uid":51124,"contents":"对于这几个工具个人也有一些看法。<br>\n<br>\n1.shadowsocks容易被封并不是因为协议被识别，而是因为服务可以被主动探测导致的。<br>\n目前shadowsocks-python版服务端在客户端密码错误的时候会向客户端回复固定特征的包。墙可以借这个机会来判断是不是ss服务器。<br>\n而且，大多数人的ss服务都不是安装在常见标准端口上的。境外服务器、非常见端口、无特征数据、大流量收发 本身就很容易引起怀疑了。只要墙认为这是个ss服务的话伪装成客户端去连接一下，看回复的是什么就行。<br>\n<br>\n还有shadowsocksR，各类伪装选项做的其实都非常差。<br>\n选择http伪装，在外部的网络流量审计设备来看就好像是一个人在某个论坛一直在刷新，追某个人的回复一样。在如今这个时代是没有人会这样的。<br>\n选择tls伪装，在外部的网络流量审计设备看来就好像是用户设备在向外部发起ddos一样。根本没有一个完整的流量交换过程。在运营商侧看起来更是可疑。<br>\n<br>\n2.wireguard是个非常好的协议，传输效率非常高，对于客户端和服务器的负担是最轻的。但是对于中国大陆这样运营商极度限制udp流量，且配置文件很复杂的现状来说，反而却变得不好用了。<br>\n<br>\n3.anyconnect为什么现在在中国大陆都未封锁？因为它的流量太像tls了，并且因为有很多企业级的应用在使用它，所以暂时没办法下手。<br>\n<br>\n4.v2ray不是一个专门用来躲避网络审查的东西，而是一个多功能的网络模块，如果能深入了解其中的配置的话，内网映射、两地内网互联、流量分路由转发都统统不在话下。<br>\n不是v2ray被识别了，协议本身非常严谨，没有什么问题。只是v2ray其中一部分伪装功能做的还不够好，容易被运营商抓住马脚而已。","date":"2020-06-07","agreeCount":2,"discussionCount":0}