{"type":"answer","id":198807,"parentType":"question","parentId":20551,"uid":41234,"contents":"我是某开源代理软件的开发者组成员，我说一点实际的吧，上面的评论基本上泛泛而谈<br>\n<br>\n1.首先你需要一个开源的事件驱动的多线程网络库，这是高并发的关键，一般使用C/C++/go，现在可选的主要有libuv(最快)，libev, libevent, ACE, Boost.asio，当然golang在语言层级就已经支持异步操作。<br>\n<br>\n2. 加密库，这个其实就两种，openssl,libsodium,golang标准库自带<br>\n<br>\n3. 序列化库，用于配置解析，例如protobuf，cjson,fastjson等<br>\n&nbsp;<br>\n4.一些基础infra和算法：你应该熟悉分页内存池，动态数组，哈希表，红黑树，b+树，双端缓冲队列，因为有时候开源库里面或者语言自带这些容器和结构，但你得知道怎么用。路由算法方面（实现PAC机制）你应该会哈希表和trie树以及b+树，用来快速路由数据包里面的目的ip<br>\n<br>\n5.协议，不建议自建协议，但是你需要自己实现现有的协议，因为现有代理软件的开发者据我所知没有把自己协议封装成库的<br>\n以上针对服务端，以下针对客户端：<br>\n1. 首先确立一个观点，客户端只是一个用户交互的界面，所以正确做法是把服务端跨编嵌入你的客户端，作为一个独立进程建立一个本地server，客户端只用管理配置和启停。或者你可以直接把v2ray或shadowsocks-libev编译到你的平台作为core。<br>\n2. 界面开发，如果你不想一个平台一套代码，可以使用xamarin，如果你想原生，那就原生（建议）<br>\n3. 分应用代理实现：<br>\nandroid&nbsp; 似乎系统提供了API（我不开发安卓，此条不可信）<br>\nIOS, Darwin 没可能<br>\nLinux 直接hook系统socket函数，或者写一个内核驱动去filter pid<br>\nWindows 最麻烦，win hook现在很容易崩溃，你需要写WFP或者NDIS驱动，并自己买张EV证书签名<br>\n<br>\n最后, 不要觉得自己可以把上面全部掌握完，多多使用开源库。<br>\n<br>\n具体细节，可以在回复里问题","date":"2020-03-09","agreeCount":29,"discussionCount":4}