{"type":"answer_discussion","id":133166,"uid":21623,"date":"2019-12-12","contents":"@18291:<br>\nWindows在安全方面是做了很多努力的，并且对于没有Linux使用经验的人，默认配置的Windows在安全方面显然做的更多。<br>\n<br>\n举例：<br>\n对于普通用户来说：<br>\n有些Linux发行版（比如：Ubuntu）默认的情况下防火墙是不工作（其实是一个规则都没有）。对应的Windows从XP SP3时代以来就默认安装并且启用了Windows防火墙，默认情况下会阻止外部向内访问。<br>\n主板上搭载的安全启动（Secure Boot）可以阻止对系统启动的有关组件进行篡改，对于Windows是默认启用的，有部分Linux发行版支持Secure Boot（比如：Ubuntu）但是也有一些可能由于各种原因不支持或者需要手动签名之类的。<br>\n除此以外微软要求强制为Windows10设计的电脑安装TPM 2.0，基于TPM用户可以很方便的启用Bitlocker进行全盘加密，全盘加密的好处我就不复述了。对比Linux来看，你想在Linux上启用TPM对于普通用户来说几乎是不可能的，虽然Linux上LUKS一类的全盘加密方案也可以不要TPM但是使用起来对比使用TPM还是麻烦一些。<br>\n<br>\n对于专业用户来说：<br>\nWindows提供了更加复杂的权限设置（复杂是中性的，因为也有可能因为复杂变成灾难），对比Linux的权限控制更加细致一些（不包括SELinux，apparmor等机制）。<br>\n<br>\n从安全机制上来说：<br>\n用户态方面：<br>\n除了传统的账户权限那一套以外Windows Vista以后系统内置的UAC对程序的权限做了更多的限制，比如UI隔离（User Interface Privilege Isolation）、强制完整性控制（Mandatory Integrity Control）。即使你使用的是管理员权限只要被附加了中低级的完整性控制，程序仍然会受到限制，以阻止对各种资源的访问或者修改。通过这样的机制可以缓解各种威胁。<br>\n<br>\nWindows内核方面：<br>\n从Vista起Windows内核引入了PatchGuard来阻止各种在内核里的挂钩，引入了驱动程序强制签名（Driver Signature Enforcement）阻止未经签名的驱动来加载。（虽然PatchGuard和DSE目前均有绕过的解决方案）<br>\n从Windows 10起还引入了虚拟化的安全性（Virtualization-based security）与虚拟机管理程序代码完整性（Hypervisor Enforced Code Integrity），这两项措施基本阻止了任何未签名的代码在内核中运行。<br>\n针对各种漏洞的防护或者机制：<br>\n1、地址随机化（ASLR），从Windows Vista开始引入。<br>\n2、内核地址随机化（Kernel ASLR）简称kASLR，从Windows Vista开始引入。<br>\n3、数据执行保护（Data Execution Prevention）简称DEP，从Windows XP SP2开始引入。<br>\n4、控制流防护（Control Flow Guard）（其他平台称之为Control-flow integrity）简称CFG，从Windows 10开始引入。<br>\n5、kCFG，CFG的内核版本，从Windows 10开始引入。<br>\n6、任意代码保护（Arbitrary Code Guard），从 Windows 10 Creators 更新起开始引入<br>\n7、代码完整性保护（Code Integrity Guard），从 Windows 10 Creators 更新起开始引入<br>\n除此以外Windows10起还引入了ASR (Attack Surface Reduction)和Windows Defender Exploit Protection(WDEG) 来缓解各种各种漏洞的攻击。<br>\n当然有些防护措施不是Windows独有，像ASLR,kASLR,DEP等等Linux上同样存在。当然这些安全措施不是万无一失，只是确实提高了攻击者的攻击难度。<br>\n我只想强调的是Windows在安全方面已经做了很多的工作，它并不是一个脆弱的系统。","parentType":"answer","parentId":89287}